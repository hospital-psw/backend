// <auto-generated />
using System;
using IntegrationLibrary.Settings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntegrationLibrary.Migrations
{
    [DbContext(typeof(IntegrationDbContext))]
    [Migration("20221130192914_AddColumnForMonthlyTransferToBloodBank")]
    partial class AddColumnForMonthlyTransferToBloodBank
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IntegrationLibrary.BloodBank.BloodBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdminPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApiKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApiUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequently")
                        .HasColumnType("int");

                    b.Property<string>("GetBloodTypeAndAmountAvailability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GetBloodTypeAvailability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDummyPassword")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReportTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BloodBanks");
                });

            modelBuilder.Entity("IntegrationLibrary.News.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("IntegrationLibrary.BloodBank.BloodBank", b =>
                {
                    b.OwnsOne("IntegrationLibrary.BloodBank.MonthlyTransfer", "MonthlyTransfer", b1 =>
                        {
                            b1.Property<int>("BloodBankId")
                                .HasColumnType("int");

                            b1.Property<int>("ABMinus")
                                .HasColumnType("int");

                            b1.Property<int>("ABPlus")
                                .HasColumnType("int");

                            b1.Property<int>("AMinus")
                                .HasColumnType("int");

                            b1.Property<int>("APlus")
                                .HasColumnType("int");

                            b1.Property<int>("BMinus")
                                .HasColumnType("int");

                            b1.Property<int>("BPlus")
                                .HasColumnType("int");

                            b1.Property<DateTime>("DateTime")
                                .HasColumnType("datetime2");

                            b1.Property<int>("OMinus")
                                .HasColumnType("int");

                            b1.Property<int>("OPlus")
                                .HasColumnType("int");

                            b1.HasKey("BloodBankId");

                            b1.ToTable("BloodBanks");

                            b1.WithOwner()
                                .HasForeignKey("BloodBankId");
                        });

                    b.Navigation("MonthlyTransfer");
                });
#pragma warning restore 612, 618
        }
    }
}
